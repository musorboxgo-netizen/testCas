IMS Notification Service Overview
• The service acts as a proxy between the IAM application and Firebase (for mobile push
notifications).
• It integrates only with Firebase. APNs is not accessed directly, but is used via Firebase.
• If the Firebase server is unavailable or unresponsive, the service will retry the request
up to 5 times.
• Authorization is handled via an API key, which will be provided in an email as a onetime view code.
• The API key must be included in the request header using: X-API-KEY.
• Once you receive your API key, it is immediately valid and ready for use.
Please refer to the attached messaging-service.yml (OpenAPI documentation) for details.
An explanation of the serializedData field can be found in the attached
ims_serializedData.txt.
Yours IAM Service
Your IAM service extension needs to provide following -
- QR code
your IAM application needs to provide QR code in the format that you see below
otpauth://totp/InalogyIAM.io:will.shakes%40playground.stage?secret=INVDC2SOMNCUENDJGVDUU
ZDPMVJGO2KO&digits=6&mode=push&algorithm=SHA256&issuer=InalogyIAM.io&callback=https%3A%2F%2Fauth.inalogy.io%2Frealms%2Fsaas%2Fpush
-auth%2Fexternal%2F05450519-c66d-4d20-b1f2-c849062f5981&period=30
Fields
o otpauth://totp – standard totp qr code start
o Inalogy-IAM.io:will.shakes%40playground.stage – displayed data
issuer:username
o INVDC2SOMNCUENDJGVDUUZDPMVJGO2KO – TOTP secret
o Digits – how many digits will TOTP use
o Algorithm – generating algo for totp
o Issuer – issuer of QR code
o Callback – url of your IAM service in our case
https://service.com/realms/saas/push-auth/external/userId
o Period – how often is totp refresh
- ENDPOINTS
All endpoints reside behind a callback URL — in practice, they are invoked by the mobile
device.
• Success responses should return HTTP 204 No Content.
• Standard error responses include HTTP 400 (Bad Request) and HTTP 403 (Forbidden)
as applicable.
• Since the service is not publicly exposed, there are no public API docs available.
• However, we provide Markdown documentation that describes:
o The available endpoints
o Expected request bodies
Please refer to the attached documentation file for implementation details and sample request
payloads